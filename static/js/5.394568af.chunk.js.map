{"version":3,"sources":["HOC/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Massege/Massege.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsContainer","state","isAuth","auth","withAuthRedirect","Component","AuthRedirect","this","props","to","React","connect","module","exports","DialogsItem","path","id","className","s","img","src","alt","dialogs__user","activeClassName","active","name","Massege","chat__dialog","massage","maxLength50","maxLengthCreator","minLength8","minLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","TextArea","validate","required","Dialogs","dialogElements","dialogsPage","dialogs","map","d","friends","massageElements","masseges","m","massege","container","chat","values","addDialogMessage","messageBody","compose","navigation","dispatch","addDialogMessageActionCreator"],"mappings":"oOAKIA,EAA2B,SAACC,GAAD,MAAY,CACvCC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,iLAKnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eALV,GAEhBC,IAAML,WASjC,OADkCM,YAAQX,EAARW,CAAkCL,K,oBCnBxEM,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,yBAAyB,cAAgB,+BAA+B,IAAM,qBAAqB,OAAS,wBAAwB,QAAU,2B,+FCalMC,EATK,SAACN,GACjB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OAAQ,6BACA,yBAAKC,UAAWC,IAAEC,IAAKC,IAAKZ,EAAMW,IAAKE,IAAI,KAC3C,kBAAC,IAAD,CAASZ,GAAIM,EAAME,UAAWC,IAAEI,cAAeC,gBAAiBL,IAAEM,QAAShB,EAAMiB,QCE9EC,EAPC,SAAClB,GACb,OACA,yBAAKS,UAAWC,IAAES,cAAenB,EAAMoB,U,iCCGrCC,EAAcC,YAAiB,IAC/BC,EAAaC,YAAiB,GA8ChCC,EAAmBC,YAAU,CAACC,KAAM,eAAjBD,EAbJ,SAAC1B,GAChB,OACI,0BAAM4B,SAAU5B,EAAM6B,cAClB,6BACA,kBAACC,EAAA,EAAD,CAAQC,YAAa,qBAAsBC,UAAWC,IAAUhB,KAAM,cAClEiB,SAAU,CAACC,IAAUd,EAAaE,MAEtC,6BACI,mDAQDa,EA5CC,SAACpC,GAEb,IAAIqC,EAAiB,CAACrC,EAAMsC,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAajC,GAAIiC,EAAEjC,GAAIS,KAAMwB,EAAExB,UACpFjB,EAAM0C,QAAQF,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAa9B,IAAK8B,EAAE9B,UAC3CgC,EAAkB3C,EAAMsC,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASzB,QAASyB,EAAEC,aAO9E,OACI,yBAAKrC,UAAWC,IAAEqC,WACd,6BACKV,EAAe,IAEpB,yBAAK5B,UAAWC,IAAE6B,SACbF,EAAe,IAEpB,yBAAK5B,UAAWC,IAAEsC,MACbL,EACJ,kBAAClB,EAAD,CAAkBG,SAdV,SAACqB,GACdjD,EAAMkD,iBAAiBD,EAAOE,mB,wBCFvBC,sBACXjD,aAfoB,SAACV,GACrB,MAAO,CACH6C,YAAa7C,EAAM6C,YACnBI,QAASjD,EAAM4D,WAAWX,YAGP,SAACY,GACxB,MAAO,CACHJ,iBAAkB,SAACC,GACfG,EAASC,YAA8BJ,SAO/CvD,IAFWwD,CAGbhB","file":"static/js/5.394568af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsContainer = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class AuthRedirect extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConectRedirectAuthComponent = connect(mapStateToPropsContainer)(AuthRedirect);\r\n    return ConectRedirectAuthComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__245m5\",\"dialogs\":\"Dialogs_dialogs__ndWgb\",\"dialogs__user\":\"Dialogs_dialogs__user__ATkl3\",\"img\":\"Dialogs_img__3I1ls\",\"active\":\"Dialogs_active__BVktm\",\"massage\":\"Dialogs_massage__28RlB\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (<div>\r\n            <img className={s.img} src={props.img} alt=\"\"/>\r\n            <NavLink to={path} className={s.dialogs__user} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Massege = (props) => {\r\n    return (\r\n    <div className={s.chat__dialog}>{props.massage}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Massege;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Massege from \"./Massege/Massege\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../Utilits/Validators\";\r\nimport {TextArea} from \"../ItemsControl/FormControl/FormControls\";\r\n\r\n//обьявляем валидаторы\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst minLength8 = minLengthCreator(8)\r\n\r\n\r\n\r\n//создание презинтационной компаненты\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElements = [props.dialogsPage.dialogs.map(d => <DialogsItem id={d.id} name={d.name}/>),\r\n        props.friends.map(d => <DialogsItem img={d.img}/>)]\r\n    let massageElements = props.dialogsPage.masseges.map(m => <Massege massage={m.massege}/>)\r\n\r\n\r\n    let addMessage = (values) => {\r\n        props.addDialogMessage(values.messageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div>\r\n                {dialogElements[1]}\r\n            </div>\r\n            <div className={s.dialogs}>\r\n                {dialogElements[0]}\r\n            </div>\r\n            <div className={s.chat}>\r\n                {massageElements}\r\n             <DialogsReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//Создание формы с помощью redux-form\r\nconst DilogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n            <Field  placeholder={\"Enter your message\"} component={TextArea} name={\"messageBody\"}\r\n                validate={[required, maxLength50, minLength8]}></Field>\r\n            </div>\r\n            <div>\r\n                <button >AddMassege</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nlet DialogsReduxForm = reduxForm({form: \"dialogsForm\"})(DilogsForm)\r\n\r\n\r\nexport default Dialogs;","import {addDialogMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        friends: state.navigation.friends,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addDialogMessage: (messageBody) => {\r\n            dispatch(addDialogMessageActionCreator(messageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n"],"sourceRoot":""}