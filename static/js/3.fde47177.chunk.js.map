{"version":3,"sources":["HOC/withAuthRedirect.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/assets/images/userPhoto.png","components/Profile/ProfileInformation/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInformation/ProfileStatusWithHooks.jsx","components/Profile/ProfileInformation/ProfileData.jsx","components/Profile/ProfileInformation/ProfileDataForm.jsx","components/Profile/ProfileInformation/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsContainer","state","isAuth","auth","withAuthRedirect","Component","AuthRedirect","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","module","exports","ProfileStatusWhuthHook","useState","editMode","setEditMode","userStatus","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateUserStatus","onChange","e","currentTarget","Contacts","contactTitle","contactValue","ProfileData","profile","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","className","style","contacts","keys","map","key","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","error","onSubmit","styles","loginControlError","createrField","Input","type","TextArea","ProfileInfo","savePhoto","saveProfile","Preloader","user__photo","src","photos","large","userPhoto","alt","target","files","formData","then","initialValues","Post","s","item","massege","likeCounter","window","MyPosts","memo","console","log","postsElements","posts","reverse","p","id","PostReduxForm","values","addPost","postBody","maxLength50","maxLengthCreator","minLength8","minLengthCreator","Field","placeholder","component","name","validate","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","main","ProfileContainer","userId","match","params","meUserId","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","idUser","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.fde47177.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsContainer = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class AuthRedirect extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConectRedirectAuthComponent = connect(mapStateToPropsContainer)(AuthRedirect);\r\n    return ConectRedirectAuthComponent;\r\n}\r\n\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","module.exports = __webpack_public_path__ + \"static/media/userPhoto.9a019080.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__photo\":\"ProfileInfo_user__photo__uZp3x\",\"contacts\":\"ProfileInfo_contacts__2UbDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2yS3T\"};","import React, {useState, useEffect} from \"react\";\r\n\r\n\r\n const ProfileStatusWhuthHook = (props) => {\r\n\r\nlet [editMode, setEditMode] = useState(false)\r\nlet [status, setStatus] = useState(props.userStatus)\r\n\r\n     useEffect(() => {\r\n         setStatus(props.userStatus)\r\n     }, [props.userStatus])\r\n\r\n\r\n     let activeteEditMode = () => {\r\n         setEditMode(true)\r\n     }\r\n\r\n     let deactiveteEditMode = () => {\r\n         setEditMode(false)\r\n         props.updateUserStatus(status)\r\n     }\r\n\r\n     let onCangeUserStatus = (e) => {\r\n         setStatus(e.currentTarget.value)\r\n     }\r\n\r\n        return (<div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activeteEditMode}>{props.userStatus || \"Введите свой статус!\"}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input autoFocus={true}\r\n                           onBlur={deactiveteEditMode}\r\n                           value={status}\r\n                           onChange={onCangeUserStatus}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default ProfileStatusWhuthHook;","import React from \"react\";\r\nimport style from './ProfileInfo.module.css';\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <button onClick={goToEditMode}>Edit</button>}\r\n        <div>\r\n            <b>Full Name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {\r\n            profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div className={style.contacts}>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileData;","import React from \"react\";\r\nimport style from './ProfileInfo.module.css';\r\nimport {createrField, Input, TextArea} from \"../../ItemsControl/FormControl/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport styles from \"../../ItemsControl/FormControl/FormControl.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <button>Save change</button>\r\n        { error && <div className={styles.loginControlError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b>Full Name</b>: {createrField(Input, \"fullName\", \"Full Name\", [])}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createrField(\"input\", \"lookingForAJob\", null, [], {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {createrField(TextArea, \"lookingForAJobDescription\", \"My professional skills\", [])}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>: {createrField(TextArea, \"aboutMe\", \"About me\", [])}\r\n        </div>\r\n        <div className={style.contacts}>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key}><b>{key}</b>: {createrField(Input, \"contacts.\" + key, key, [])}</div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet ProfileDataFormReduxForm = reduxForm({form: 'profileEdit'})(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from \"../../ItemsControl/Prealoader/Preloader\";\r\nimport ProfileStatusWhuthHook from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../assets/images/userPhoto.png\"\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, savePhoto, userStatus, updateUserStatus, isOwner, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n    }\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    let onAddNewPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n\r\n    return (<div>\r\n            Status: <ProfileStatusWhuthHook\r\n            userStatus={userStatus}\r\n            updateUserStatus={updateUserStatus}/>\r\n            <div>\r\n                <img className={style.user__photo} src={profile.photos.large ? profile.photos.large : userPhoto}\r\n                     alt={\"\"}/>\r\n                {isOwner && <input type={\"file\"} onChange={onAddNewPhoto}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm profile={profile} onSubmit={onSubmit} initialValues={profile}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (<div className ={s.item}>\r\n    <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRuJ1_ed4wE8cGxLfOcW-SaUVG5F8AaETC3CpOHf6HSbPLzY9Xs\" alt=\"\" />\r\n  <div>{props.massege}</div>\r\n  <span>Like {props.likeCounter}</span>\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../Utilits/Validators\";\r\nimport {TextArea} from \"../../ItemsControl/FormControl/FormControls\";\r\n\r\nwindow.props=[];\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER\");\r\n    window.props.push(props);\r\n\r\n    let postsElements = [...props.posts].reverse().map(p => <Post key={p.id} massege={p.massege} likeCounter={p.likeCounter}/>)\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.postBody)\r\n    }\r\n    return (<div>\r\n            <PostReduxForm onSubmit={addPost}/>\r\n            {postsElements}\r\n        </div>\r\n    )\r\n});\r\n\r\n//обьявляем валидаторы\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst minLength8 = minLengthCreator(8)\r\n\r\n\r\n//Создание формы с помощью redux-form\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"add new post\"} component={TextArea} name={\"postBody\"}\r\n                       validate={[required, maxLength50, minLength8]}></Field>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst PostReduxForm = reduxForm({form: \"postForm\"})(PostForm)\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postBody) => dispatch(addPostActionCreator(postBody))\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInformation/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <main className={s.main}>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                userStatus={props.userStatus}\r\n                updateUserStatus={props.updateUserStatus}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer/>\r\n        </main>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    setUserProfile,\r\n    updateUserStatus\r\n} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.meUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     userStatus={this.props.userStatus}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    userStatus: state.profilePage.userStatus,\r\n    meUserId: state.auth.idUser\r\n\r\n\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n"],"sourceRoot":""}